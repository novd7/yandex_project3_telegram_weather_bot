def get_weather_condition_symbol(condition: str, day_time: str) -> str:
    symbols = {
        "clear": {
            "day": "‚òÄÔ∏è",
            "night": "üåô"
        },
        "partly-cloudy": "üå§Ô∏è",
        "cloudy": "üå§Ô∏è",
        "overcast": "‚òÅÔ∏è",
        "drizzle": "üå¶Ô∏è",
        "light-rain": "üå¶Ô∏è",
        "rain": "üå¶Ô∏è",
        "moderate-rain": "üåßÔ∏è",
        "heavy-rain": "üåßÔ∏è",
        "continuous-heavy-rain": "üåßÔ∏è",
        "showers": "üåßÔ∏è",
        "wet-snow": "üå®Ô∏è",
        "light-snow": "üå®Ô∏è",
        "snow": "üå®Ô∏è",
        "snow-showers": "üå®Ô∏è",
        "hail": "üåßÔ∏è",
        "thunderstorm": "üå©Ô∏è",
        "thunderstorm-with-rain": "‚õàÔ∏è",
        "thunderstorm-with-hail": "‚õàÔ∏è"
    }
    
    if condition not in symbols.keys():
        return ""
    
    if isinstance(symbols[condition], dict):
        return symbols[condition][day_time]
    
    return symbols[condition]


def translate_condition(condition: str) -> str:
    dictionary = {
        "clear": "—è—Å–Ω–æ",
        "partly-cloudy": "–º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ",
        "cloudy": "–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏",
        "overcast": "–ø–∞—Å–º—É—Ä–Ω–æ",
        "drizzle": '–º–æ—Ä–æ—Å—å',
        "light-rain": "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å",
        "rain": "–¥–æ–∂–¥—å",
        "moderate-rain": "—É–º–µ—Ä–µ–Ω–Ω–æ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å",
        "heavy-rain": "—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å",
        "continuous-heavy-rain": "–¥–ª–∏—Ç–µ–ª—å–Ω—ã–π —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å",
        "showers": "–ª–∏–≤–µ–Ω—å",
        "wet-snow": "–¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º",
        "light-snow": "–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥",
        "snow": "—Å–Ω–µ–≥",
        "snow-showers": "—Å–Ω–µ–≥–æ–ø–∞–¥",
        "hail": "–≥—Ä–∞–¥",
        "thunderstorm": "–≥—Ä–æ–∑–∞",
        "thunderstorm-with-rain": "–¥–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π",
        "thunderstorm-with-hail": "–≥—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º"
    }
    
    print(condition, dictionary[condition.replace(" ", "")], sep='\n')
    return dictionary[condition.replace(" ", "")]


def translate_wind_dir(wind_dir: str) -> str:
    
    wind_dir = wind_dir.replace("N", "–°")
    wind_dir = wind_dir.replace("S", "–Æ")
    wind_dir = wind_dir.replace("W", "–ó")
    wind_dir = wind_dir.replace("E", "–í")
    
    return wind_dir


def get_message_text_for_day_forecast(data: dict):
    
    message = f"<b>‚ùñ –ü–æ–≥–æ–¥–∞ –Ω–∞ {data['date']} –≤ –≥–æ—Ä–æ–¥–µ {data['place']} ‚ùñ</b>\n\n"
    for rus, eng, for_symbol in zip(("<b>‚Ä¢<u> –ù–æ—á—å—é</u></b> (0 - 5 —á–∞—Å–æ–≤)",
                                     "<b>‚Ä¢<u> –£—Ç—Ä–æ–º</u></b> (6 - 11 —á–∞—Å–æ–≤)",
                                     "<b>‚Ä¢<u> –î–Ω—ë–º</u></b> (12 - 17 —á–∞—Å–æ–≤)",
                                     "<b>‚Ä¢<u> –í–µ—á–µ—Ä–æ–º</u></b> (18 - 23 —á–∞—Å–æ–≤)"),
                                    ("night", "morning", "day", "evening"),
                                    ("night", "day", "day", "night")):
    
        message += f"{rus}:\n" \
                   f"   {get_weather_condition_symbol(data['weather'][eng]['condition'], for_symbol)} " \
                   f"{translate_condition(data['weather'][eng]['condition'])} " \
                   f"<u><b>{data['weather'][eng]['temperature']}¬∞C</b></u>\n"
        message += f"  ‚Ä£ –í–µ—Ç–µ—Ä: {translate_wind_dir(data['weather'][eng]['wind_dir'].upper())}, " \
                   f"{data['weather'][eng]['wind_speed']} –º/—Å\n"
        message += f"  ‚Ä£ –í–ª–∞–∂–Ω–æ—Å—Ç—å: {data['weather'][eng]['humidity']}%\n"
        message += f"  ‚Ä£ –î–∞–≤–ª–µ–Ω–∏–µ: {data['weather'][eng]['pressure']} –º–º —Ä—Ç. —Å—Ç.\n\n"
    
    return message


def get_message_text_for_week_forecast(data: dict):
    message = f"<b>‚ùñ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 7 –¥–Ω–µ–π ‚ùñ</b>\n\n"
    
    for date in data.keys():
        message += f"<b><u>{date}</u></b>\n"
        message += f"  ‚Ä¢ –ù–æ—á—å—é (0 - 5 —á–∞—Å–æ–≤): \n" \
                   f"        {get_weather_condition_symbol(data[date]['night']['condition'], 'night')} " \
                   f"{translate_condition(data[date]['night']['condition'])}, " \
                   f"{data[date]['night']['temperature']}¬∞C\n"
        message += f"  ‚Ä¢ –î–Ω—ë–º (6 - 23 —á–∞—Å–æ–≤): \n" \
                   f"        {get_weather_condition_symbol(data[date]['day']['condition'], 'day')} " \
                   f"{translate_condition(data[date]['day']['condition'])}, " \
                   f"{data[date]['day']['temperature']}¬∞C\n\n"
    
    return message
